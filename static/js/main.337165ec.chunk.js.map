{"version":3,"sources":["StateProvider.js","components/CardRow.js","components/Cards.js","components/Header.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","initialState","reducer","children","Provider","value","useReducer","useStateValue","useContext","CardRow","forwardRef","ref","id","imageUrl","name","email","company","skill","grades","tags","dispatch","useState","expanded","setExpanded","average","setAverage","tag","setTag","displayTags","setDisplayTags","useEffect","arr","intArr","map","i","Number","intAverage","reduce","a","b","length","toFixed","calculateAverage","tempTags","push","className","Card","variant","Avatar","src","alt","Collapse","in","timeout","unmountOnExit","grade","index","eachTag","onSubmit","e","preventDefault","type","payload","style","marginLeft","TextField","autoFocus","label","onChange","target","IconButton","onClick","fontSize","Cards","students","student","pic","firstName","lastName","Header","setName","searchTag","setSearchTag","Autocomplete","ListboxProps","maxHeight","freeSolo","options","renderInput","params","App","filters","counter","setCounter","fetchData","fetch","then","res","json","data","filteredStudents","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.337165ec.chunk.js","sourcesContent":["  \r\nimport React, {createContext, useContext, useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({initialState, reducer, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState, forwardRef  } from 'react';\r\nimport './CardRow.css';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nconst CardRow = forwardRef(({id, imageUrl, name, email, company, skill, grades}, ref) => {\r\n\r\n    const [{tags}, dispatch] = useStateValue();\r\n\r\n    // console.log(\"ALL TAGS -->\", tags);\r\n\r\n    const [expanded, setExpanded] = useState();\r\n    const [average, setAverage] = useState(\"\");\r\n    const [tag, setTag] = useState(\"\");\r\n    const [displayTags, setDisplayTags] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const calculateAverage = (arr) => {\r\n            let intArr = arr.map(i=>Number(i));\r\n            let intAverage = (intArr.reduce((a,b) => a + b, 0) / intArr.length).toFixed(2);\r\n            setAverage(intAverage);\r\n        };\r\n\r\n        calculateAverage(grades);\r\n    }, [])\r\n\r\n    // CHECK AND SAVE INDIVIDUAL TAGS\r\n    useEffect(() => {\r\n        const tempTags = [];\r\n        for (var i=0; i<tags.length; i++) {\r\n            if (tags[i].email === email) {\r\n                tempTags.push(tags[i].tag)\r\n                // console.log(tags[i].email)\r\n            }\r\n        }\r\n        setDisplayTags(tempTags)\r\n    }, [tag])\r\n\r\n    // console.log(displayTags)\r\n\r\n    // console.log(grades);\r\n    // console.log(average)\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(tag)\r\n        dispatch({\r\n            type: 'SET_TAG',\r\n            payload: {email, tag}\r\n        })\r\n        setTag(\"\")\r\n    };\r\n\r\n    return (\r\n        <div ref={ref} className=\"cardRow\">\r\n            <Card className=\"cardRow__card\" variant=\"outlined\">\r\n                <Avatar \r\n                    className=\"cardRow__avatar\"\r\n                    src={imageUrl} \r\n                    alt=\"\" \r\n                />\r\n\r\n                <div className=\"cardRow__info\">\r\n                    <h1>{name}</h1>\r\n                    <p>Email: {email}</p>\r\n                    <p>Company: {company}</p>\r\n                    <p>Skll: {skill}</p>\r\n                    <p>Average: {average}%</p>\r\n\r\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                        <div className=\"cardRow__infoGrades\">\r\n                            {grades.map((grade, index) => (\r\n                                <p>\r\n                                    {`Test ${index + 1}:   ${grade}%`}\r\n                                </p>\r\n                            ))}\r\n                        </div>\r\n                    </Collapse>\r\n                            \r\n                    <div className=\"cardRow__tags\">\r\n                        {displayTags?.map((eachTag) => \r\n                            <p>{eachTag}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <form onSubmit={handleSubmit} style={{marginLeft: \"20px\"}}>\r\n                        <TextField\r\n                            id=\"tag\"\r\n                            autoFocus\r\n                            type='text'\r\n                            value={tag} \r\n                            label=\"Add a tag\"\r\n                            onChange={(e) =>setTag(e.target.value)} \r\n                        />\r\n                    </form>\r\n                </div>\r\n                \r\n                <IconButton className=\"cardRow__icon\" onClick={handleExpandClick}>\r\n                    {expanded? <RemoveIcon fontSize=\"large\" /> : <AddIcon fontSize=\"large\" />}\r\n                </IconButton>\r\n                \r\n                \r\n            </Card>\r\n        </div>\r\n    )\r\n});\r\n\r\n// const CardRow = ({id, imageUrl, name, email, company, skill, grades}) => {\r\n    \r\n// }\r\n\r\nexport default CardRow\r\n","import React from 'react';\r\nimport './Cards.css';\r\n\r\nimport {useStateValue} from '../StateProvider';\r\n\r\nimport CardRow from './CardRow';\r\n\r\nimport FlipMove from'react-flip-move';\r\n\r\nfunction Cards() {\r\n\r\n    const [{students}, dispatch] = useStateValue();\r\n\r\n    // console.log(students);\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n            <FlipMove>\r\n                    {students.map((student) => (\r\n                        <CardRow \r\n                            key={student.id}\r\n                            // sid={student.id}\r\n                            imageUrl={student.pic}\r\n                            name={student.firstName + ' ' + student.lastName}\r\n                            email={student.email}\r\n                            company={student.company}\r\n                            skill={student.skill}\r\n                            grades={student.grades}\r\n                        />\r\n                    ))}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Header.css';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nfunction Header() {\r\n    const [{students, tags}, dispatch] = useStateValue();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [searchTag, setSearchTag] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: [name, searchTag]\r\n        });\r\n\r\n    }, [name, searchTag])\r\n\r\n    // console.log(\"Flter Name-->\", name);\r\n    // console.log(\"Filter Tag -->\", searchTag);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Autocomplete\r\n                ListboxProps={{ style: { maxHeight: \"6rem\" }}}\r\n                freeSolo\r\n                options={students.map((student) => student.firstName + ' ' + student.lastName)}\r\n                renderInput={(params) => (\r\n                    <TextField \r\n                        {...params}\r\n                        autoFocus\r\n                        id=\"name\"\r\n                        value={name}\r\n                        type='text' \r\n                        label=\"Search by name\"\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                )}\r\n                onChange={(e, value) => setName(value)}\r\n            />\r\n            \r\n            <Autocomplete\r\n                freeSolo\r\n                options={tags.map((tag) => tag.tag)}\r\n                renderInput={(params) => (\r\n                    <TextField \r\n                        {...params}\r\n                        autoFocus\r\n                        id=\"tag\"\r\n                        value={searchTag}\r\n                        type='text' \r\n                        label=\"Search by tag\"\r\n                        onChange={(e) => setSearchTag(e.target.value)}\r\n                    />\r\n                )}\r\n                onChange={(e, value) => setSearchTag(value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useEffect, useState } from 'react';\nimport './App.css';\n\nimport {useStateValue} from './StateProvider';\n\nimport Cards from './components/Cards';\nimport Header from './components/Header'\n\nfunction App() {\n\n  const [{filters, students, tags}, dispatch] = useStateValue();\n\n  // console.log('Name Filter-->', filters[0], '||', 'Tag Filter-->', filters[1]);\n\n  const [counter, setCounter] = useState(0);\n\n  const fetchData = () => {\n    fetch(\"https://api.hatchways.io/assessment/students\")\n    .then((res) => \n      res.json()\n    )\n    .then((data) =>{\n      dispatch({\n        type: 'SET_DATA',\n        payload: data.students\n      });\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  useEffect(() =>{\n    // console.log('Filters changed')\n    const filteredStudents = students.filter((student) => ((student.firstName + ' ' + student.lastName).toLowerCase()).includes(filters[0].toLowerCase()))\n\n    // Not in use filter tags\n    // const filteredTags = tags.filter((eachTag) => (eachTag.tag).includes(filters[1]));\n    // let idx = 0;\n    // while (idx < filteredTags.length) {\n    //   const filteredTagStudent = students.filter((student) => student.email === filteredTags[idx].email);\n    //   console.log(filteredTagStudent)\n    //   idx += 1;\n    // };\n\n    // console.log(filteredStudents)\n    // console.log(filteredTags)\n\n    // console.log(counter, filters[0].length);\n\n    if (filters[0].length === 0) {\n      fetchData();\n    } else if (counter > filters[0].length) {\n      fetchData();\n      setCounter(0);\n    } else {\n      dispatch({\n        type: 'SET_DATA',\n        payload: filteredStudents\n      });\n      setCounter(filters[0].length);\n    }\n\n  }, [filters[0], filters[1]])\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__body\">\n        <Header />\n        <Cards />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n    students: [],\r\n    tags: [],\r\n    filters: ['', ''],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n     // console.log(action)\r\n    // console.log(state)\r\n\r\n    switch(action.type) {\r\n        case 'SET_DATA':\r\n            return {\r\n                ...state,\r\n                students: action.payload\r\n        }\r\n\r\n        case 'SET_TAG':\r\n            return {\r\n                ...state,\r\n                tags: [...state.tags, action.payload]\r\n        }\r\n\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filters: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {StateProvider} from './StateProvider';\nimport reducer, {initialState} from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider\n      initialState={initialState}\n      reducer={reducer}\n    >\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}